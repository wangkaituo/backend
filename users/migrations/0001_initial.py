# Generated by Django 5.1.7 on 2025-04-24 06:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmpUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('emp_id', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, verbose_name='员工编号')),
                ('emp_name', models.CharField(max_length=15, verbose_name='员工姓名')),
                ('emp_email', models.EmailField(max_length=50, null=True, verbose_name='员工邮箱')),
                ('emp_phone', models.CharField(max_length=11, null=True, unique=True, verbose_name='员工手机号')),
                ('emp_role', models.CharField(choices=[('boss', 'Boss'), ('manager', 'Manager'), ('employee', 'Employee')], default='employee', max_length=10, verbose_name='员工角色')),
                ('emp_join_date', models.DateField(auto_now_add=True, verbose_name='员工入职日期')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('department', models.ForeignKey(db_column='department_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='departments.department', verbose_name='所属部门号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工信息',
                'verbose_name_plural': '员工信息',
                'db_table': 'users_empuser',
            },
        ),
    ]
